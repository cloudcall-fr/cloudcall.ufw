---

- name: Configuring port/protocol/network rules
  ufw:
    comment: "{{ item.0.comment | default(omit) }}"
    delete: "{{ item.0.delete | default(omit) }}"
    direction: "{{ item.0.direction | default(omit) }}"
    from_ip: "{{ item.1 if (item.1 != '') else omit }}"
    from_port: "{{ item.0.from_port | default(omit) }}"
    insert: "{{ item.0.insert | default(omit) }}"
    interface: "{{ item.0.interface | default(omit) }}"
    log: "{{ item.0.log | default(omit) }}"
    logging: "{{ item.0.logging | default(omit) }}"
    name: "{{ item.0.name | default(omit) }}"
    policy: "{{ item.0.policy | default(omit) }}"
    port: "{{ item.0.port | default(omit) }}"
    proto: "{{ item.0.proto | default(omit) }}"
    rule: "{{ item.0.rule | default('allow') }}"
    state: "{{ item.0.state | default(omit) }}"
    to_ip: "{{ item.0.to_ip | default(omit) }}"
    to_port: "{{ item.0.to_port | default(omit) }}"
    route: "{{ item.0.route | default(omit) }}"
  loop: "{{ ufw_rules_sanitized | subelements('from_ip') }}"
  vars:
    ufw_rules_sanitized: "\
      {% set a = [] %}\
      {% for item in ufw_rules %}\
      {% if item.from_ip is string %}\
      {% set _dummy = item.update({'from_ip':[ item.from_ip ]}) %}\
      {% endif %}\
      {% if item.from_ip is undefined %}\
      {% set _dummy = item.update({'from_ip':[ '' ]}) %}\
      {% endif %}\
      {% set a = a.append( item ) %}\
      {% endfor %}\
      {{ a }}"
  
- name: Configuring application rules
  ufw:
    name: "{{ item.name }}"
    rule: "{{ item.rule if item.rule is defined else 'allow' }}"
    from_ip: "{{ item.from_ip | default(omit)  }}"
  with_items: "{{ ufw_applications }}"

- name: Configuring firewall
  template:
    src: etc/default/ufw.j2
    dest: /etc/default/ufw
    owner: root
    group: root
    mode: 0644
  notify: reload ufw
